{"version":3,"sources":["../src/middlewares/json.ts"],"sourcesContent":["import { INext } from \"../types/Next\";\r\nimport { IRequest } from \"../types/Request\";\r\nimport { IResponse } from \"../types/Response\";\r\n\r\nconst jsonBodyParsin = async (req: IRequest, res: IResponse, next: INext) => {\r\n  if (req.method === \"POST\" || req.method === \"PUT\" || req.method === \"PATCH\") {\r\n\r\n    if (req.headers['content-type']?.startsWith('application/json')) { // Verifique se o Content-Type Ã© application/json\r\n      try {\r\n        req.body = await new Promise<any>((resolve, reject) => {\r\n          let bodyString = \"\";\r\n\r\n          req.on(\"data\", (chunk) => {\r\n            bodyString += chunk.toString();\r\n          });\r\n\r\n          req.on(\"end\", () => {\r\n            try {\r\n              resolve(JSON.parse(bodyString));\r\n            } catch (error) {\r\n              reject(error);\r\n            }\r\n          });\r\n\r\n          req.on(\"error\", (err) => {\r\n            reject(err);\r\n          });\r\n        });\r\n      } catch (error) {\r\n        if (error instanceof Error) {\r\n          res.statusCode = 400;\r\n          res.end(`Erro no parse do JSON: ${error.message}`);\r\n        } else {\r\n          res.statusCode = 400;\r\n          res.end(\"Erro desconhecido no parse do JSON\");\r\n        }\r\n        return;\r\n      }\r\n    }\r\n  }\r\n  next();\r\n};\r\n\r\nexport default jsonBodyParsin;\r\n"],"mappings":";AAIA,IAAM,iBAAiB,OAAO,KAAe,KAAgB,SAAgB;AAC3E,MAAI,IAAI,WAAW,UAAU,IAAI,WAAW,SAAS,IAAI,WAAW,SAAS;AAE3E,QAAI,IAAI,QAAQ,cAAc,GAAG,WAAW,kBAAkB,GAAG;AAC/D,UAAI;AACF,YAAI,OAAO,MAAM,IAAI,QAAa,CAAC,SAAS,WAAW;AACrD,cAAI,aAAa;AAEjB,cAAI,GAAG,QAAQ,CAAC,UAAU;AACxB,0BAAc,MAAM,SAAS;AAAA,UAC/B,CAAC;AAED,cAAI,GAAG,OAAO,MAAM;AAClB,gBAAI;AACF,sBAAQ,KAAK,MAAM,UAAU,CAAC;AAAA,YAChC,SAAS,OAAO;AACd,qBAAO,KAAK;AAAA,YACd;AAAA,UACF,CAAC;AAED,cAAI,GAAG,SAAS,CAAC,QAAQ;AACvB,mBAAO,GAAG;AAAA,UACZ,CAAC;AAAA,QACH,CAAC;AAAA,MACH,SAAS,OAAO;AACd,YAAI,iBAAiB,OAAO;AAC1B,cAAI,aAAa;AACjB,cAAI,IAAI,0BAA0B,MAAM,OAAO,EAAE;AAAA,QACnD,OAAO;AACL,cAAI,aAAa;AACjB,cAAI,IAAI,oCAAoC;AAAA,QAC9C;AACA;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACA,OAAK;AACP;AAEA,IAAO,eAAQ;","names":[]}